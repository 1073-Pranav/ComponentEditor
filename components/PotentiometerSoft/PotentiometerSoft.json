{
    "Parts": [
        {
            "name": "PotentiometerSoft",
            "symbol": {
                "ref": "circuito_SoftPot Membrane Potentiometer - 50mm.svg"
            },
            "displayName": "SoftPot Membrane Potentiometer - 50mm",
            "category": [
                "input"
            ],
            "desc": "",
            "bom": [
                {
                    "name": "octopart",
                    "image": "8680.png",
                    "link": "https://octopart.com/sp-l-0050-103-3%25-rh-spectra+symbol-19249684",
                    "price": "8.01",
                    "SKU": "905-1062-ND"
                }
            ],
            "info": {
                "setup": "",
                "test": ""
            },
            "placing": {
                "onBreadboard": true
            }
        }
    ],
    "Blocks": [
        {
            "name": "PotentiometerSoft",
            "path": "PotentiometerSoft",
            "category": "input",
            "blockId": "8680",
            "app": {
                "appName": "SoftPot Membrane Potentiometer - 50mm",
                "numericName": "",
                "shortName": "Membrane Potentiometer",
                "tags": [
                    "inputs"
                ],
                "indicators": {
                    "verified": "false",
                    "code": "true",
                    "solder": "false"
                },
                "desc": "<p>A linear touch soft membrane potentiometer rated at 10kOhm.</p>",
                "visible": false
            },
            "requires": [
                [
                    0,
                    [
                        "PotentiometerSoft5v"
                    ]
                ],
                [
                    1,
                    [
                        "PotentiometerSoft3v3"
                    ]
                ]
            ],
            "supportedControllers": [],
            "circuit": {}
        },
        {
            "name": "PotentiometerSoft5v",
            "path": "PotentiometerSoft",
            "category": "input",
            "blockId": "!8680",
            "coders": [
                "PotentiometerSoft"
            ],
            "supportedControllers": [
                "ATMega328P",
                "ArduinoLeonardo",
                "ArduinoMega",
                "ArduinoMicro",
                "ArduinoNano",
                "ArduinoProMini5v",
                "ArduinoUno"
            ],
            "circuit": {
                "parts": [
                    {
                        "name": "this",
                        "part": "PotentiometerSoft"
                    }
                ],
                "ports": [
                    {
                        "name": "leg2",
                        "interface": {
                            "requires":[[0,["GND"]]]
                        }
                    },
                    {
                        "name": "wiper",
                        "interface": {
                            "requires":[[0,["ADC"]]],
                            "unique": true
                        }
                    },
                    {
                        "name": "leg1",
                        "interface": {
                            "requires":[[0,["5v"]]]
                        }
                    },
                    {
                        "name": "supportedControllers",
                        "interface": {
                            "requires":[[0,["ArduinoMega"]],[1,["ArduinoUno"]],[2,["ArduinoMicro"]],[3,["ArduinoProMini5v"]],[7,["ArduinoLeonardo"]],[8,["ArduinoNano"]],[9,["ATMega328P"]]]
                        }
                    }
                ]
            }
        },
        {
            "name": "PotentiometerSoft3v3",
            "path": "PotentiometerSoft",
            "category": "input",
            "blockId": "!8680",
            "coders": [
                "PotentiometerSoft"
            ],
            "supportedControllers": [
                "ArduinoGemma",
                "ArduinoProMini3v3",
                "ESP32DevKitC",
                "NodeMCU",
                "RPI3B"
            ],
            "circuit": {
                "parts": [
                    {
                        "name": "this",
                        "part": "PotentiometerSoft"
                    }
                ],
                "ports": [
                    {
                        "name": "leg2",
                        "interface": {
                            "requires":[[0,["GND"]]]
                        }
                    },
                    {
                        "name": "wiper",
                        "interface": {
                            "requires":[[0,["ADC"]]],
                            "unique": true
                        }
                    },
                    {
                        "name": "leg1",
                        "interface": {
                            "requires":[[0,["3.3v"]]]
                        }
                    },
                    {
                        "name": "supportedControllers",
                        "interface": {
                            "requires":[[0,["ArduinoProMini3v3"]],[1,["NodeMCU"]],[2,["ArduinoGemma"]],[3,["RPI3B"]],[9,["ESP32DevKitC"]]]
                        }
                    }
                ]
            }
        }
    ],
    "Coders": [
        {
            "name": "PotentiometerSoft",
            "supportedControllers": [
                "ATMega328P",
                "ArduinoGemma",
                "ArduinoLeonardo",
                "ArduinoMega",
                "ArduinoMicro",
                "ArduinoNano",
                "ArduinoProMini3v3",
                "ArduinoProMini5v",
                "ArduinoUno",
                "ESP32DevKitC",
                "NodeMCU",
                "RPI3B"
            ],
            "code": {
                "snippetCode:": "    int {{varname}}Val = {{varname}}.read();\n    Serial.print(F(\"Val: \")); Serial.println({{varname}}Val);\n"
            },
            "license": "circuito",
            "instantiate": {
                "classname": "Potentiometer",
                "ports": [
                    "wiper"
                ]
            },
            "files": [
                "lib/*",
                "../Global/lib/AnalogReader.h",
                "../Global/lib/AnalogReader.cpp"
            ],
            "includeHeaders": [
                "Potentiometer.h"
            ]
        }
    ]
}