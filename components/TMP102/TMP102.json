{
    "Parts": [
        {
            "name": "TMP102",
            "symbol": {
                "ref": "circuito_Digital Temperature Sensor Breakout - TMP102.svg",
                "URL": "https://ucarecdn.com/b0e220a4-3c28-48f4-b4ae-87907994a6f0/"
            },
            "displayName": "SparkFun TMP102 - Digital Temperature Sensor Breakout",
            "category": [
                "input"
            ],
            "desc": "",
            "bom": [
                {
                    "name": "octopart",
                    "image": "https://ucarecdn.com/77b86fc4-fc04-41e4-81e9-64e307ea996d/",
                    "link": "https://octopart.com/sen-13314-sparkfun-80964668?r=sp&s=c5AFJfC1TlGyBFi-FY7cFQ",
                    "price": "4.95",
                    "SKU": "SEN-13314"
                }
            ],
            "info": {
                "setup": "",
                "test": ""
            },
            "headers": [
                6,
                "MaleHeaders"
            ],
            "placing": {
                "onBreadboard": false
            }
        }
    ],
    "Blocks": [
        {
            "name": "TMP102",
            "path": "TMP102",
            "category": "input",
            "blockId": "11931",
            "app": {
                "appName": "SparkFun TMP102 - Digital Temperature Sensor Breakout",
                "numericName": "TMP102",
                "shortName": "Digital Temperature Sensor",
                "tags": [
                    "inputs"
                ],
                "indicators": {
                    "verified": "true",
                    "code": "true",
                    "solder": "true"
                },
                "desc": "<p>A breakout board for the TMP102 temperature sensor - a digital sensor, ideal for projects where high accuracy is required.<br><strong>Returned Values</strong>: from -25\u00b0C to +85\u00b0C, with an accuracy of 0.5\u00b0C.(Can also return Fahrenheit).<br><strong>Requires</strong>: Soldering of 6 male pins to fit onto a breadboard.<br><strong>Sample applications</strong>: (1) Measure and show temperature on a screen, (2) If temperature is higher than a certain threshold, turn on a fan.</p>\n",
                "visible": false
            },
            "coders": [
                "TMP102"
            ],
            "supportedControllers": [
                "ATMega328P",
                "ArduinoGemma",
                "ArduinoLeonardo",
                "ArduinoMega",
                "ArduinoMicro",
                "ArduinoNano",
                "ArduinoProMini3v3",
                "ArduinoProMini5v",
                "ArduinoUno",
                "ESP32DevKitC",
                "NodeMCU",
                "RPI3B"
            ],
            "circuit": {
                "parts": [
                    {
                        "name": "this",
                        "part": "TMP102"
                    }
                ],
                "ports": [
                    {
                        "name": "VCC",
                        "interface": {
                            "requires":[[0,["3.3v"]]]
                        }
                    },
                    {
                        "name": "ADD0",
                        "interface": {
                            "requires":[[0,["GND"]]]
                        }
                    },
                    {
                        "name": "SDA",
                        "interface": {
                            "isBus": true,
                            "requires":[[0,["SDA","3.3v"]],[1,["SDA","5v"]]]
                        }
                    },
                    {
                        "name": "GND",
                        "interface": {
                            "requires":[[0,["GND"]]]
                        }
                    },
                    {
                        "name": "SCL",
                        "interface": {
                            "isBus": true,
                            "requires":[[0,["SCL","3.3v"]],[1,["SCL","5v"]]]
                        }
                    },
                    {
                        "name": "MemOverLoad",
                        "interface": {
                            "requires":[[0,["SRAMLoad"]]],
                            "requiresLoad": 176
                        }
                    },
                    {
                        "name": "supportedControllers",
                        "interface": {
                            "requires":[[0,["ArduinoMega"]],[1,["ArduinoUno"]],[2,["ArduinoMicro"]],[3,["ArduinoProMini5v"]],[5,["ArduinoProMini3v3"]],[6,["NodeMCU"]],[7,["ArduinoLeonardo"]],[8,["ArduinoNano"]],[9,["ArduinoGemma"]],[10,["RPI3B"]],[11,["ESP32DevKitC"]],[12,["ATMega328P"]]]
                        }
                    }
                ]
            }
        }
    ],
    "Coders": [
        {
            "name": "TMP102",
            "supportedControllers": [
                "ATMega328P",
                "ArduinoGemma",
                "ArduinoLeonardo",
                "ArduinoMega",
                "ArduinoMicro",
                "ArduinoNano",
                "ArduinoProMini3v3",
                "ArduinoProMini5v",
                "ArduinoUno",
                "ESP32DevKitC",
                "NodeMCU",
                "RPI3B"
            ],
            "code": {
                "snippetCode:": "    float {{varname}}TempC = {{varname}}.readCelsius();\n    Serial.print(F(\"Temp: \")); Serial.print({{varname}}TempC); Serial.println(F(\"[\u00b0C]\"));\n"
            },
            "license": "circuito",
            "instantiate": {
                "classname": "TMP102",
                "varname": "tmp102"
            },
            "files": [
                "lib/*"
            ]
        }
    ]
}