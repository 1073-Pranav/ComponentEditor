{
    "name": "RotaryEncoderInt",
    "supportedControllers": [
        "ATMega328P",
        "ArduinoLeonardo",
        "ArduinoMega",
        "ArduinoMicro",
        "ArduinoNano",
        "ArduinoProMini3v3",
        "ArduinoProMini5v",
        "ArduinoUno",
        "ESP32DevKitC",
        "NodeMCU",
        "Teensy32"
    ],
    "code": {
        "global": "    long {{varname}}OldPosition  = 0;\n",
        "constructors": "    {{classname}} {{varname}}({{D}},{{CLK}});\n    Button {{varname}}Button({{S1}});\n",
        "setup": "    {{varname}}Button.init();\n    pinMode({{S1}}, INPUT_PULLUP);\n",
        "snippetCode": "    //Read encoder new position\n    long {{varname}}NewPosition = {{varname}}.read();\n    bool {{varname}}ButtonVal = {{varname}}Button.onPress();\n    if ({{varname}}NewPosition != {{varname}}OldPosition || {{varname}}ButtonVal) {\n        {{varname}}OldPosition = {{varname}}NewPosition;\n        Serial.print(F(\"Pos: \"));\n        Serial.print({{varname}}NewPosition);\n        Serial.print(F(\"\\tButton: \"));\n        Serial.println({{varname}}ButtonVal);\n      }\n"
    },
    "license": "Free",
    "instantiate": {
        "classname": "Encoder",
        "ports": [
            "D",
            "CLK",
            "S1"
        ],
        "varname": "rotaryEncI"
    },
    "files": [
        "Encoder_license.txt",
        "direct_pin_read.h",
        "interrupt_config.h",
        "Encoder.h",
        "interrupt_pins.h",
        "Encoder.cpp",
        "Button.h",
        "Button.cpp",
        "Button_license.txt"
    ],
    "includeHeaders": [
        "Encoder.h",
        "Button.h"
    ]
}