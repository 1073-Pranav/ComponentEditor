{
    "Parts": [
        {
            "name": "BMP180",
            "symbol": {
                "ref": "https://ucarecdn.com/9e29be10-5bce-47c7-ba07-de677da97103/"
            },
            "displayName": "BMP180 - Barometric Pressure Sensor Breakout",
            "category": [
                "input"
            ],
            "desc": "",
            "bom": [
                {
                    "name": "digikey",
                    "image": "https://ucarecdn.com/57cd7515-3dc9-4813-bcd2-75f843d8e487/",
                    "link": "http://www.ebay.com/sch/i.html?_from=R40&_trksid=p2047675.m570.l1313.TR0.TRC0.H0.XBMP180+Replace+BMP085+Digital+Barometric+Pressure+Sensor+Board+Module+Arduino.TRS0&_nkw=BMP180+Replace+BMP085+Digital+Barometric+Pressure+Sensor+Board+Module+Arduino&_sacat=0",
                    "price": "1.89",
                    "SKU": ""
                }
            ],
            "info": {
                "setup": "",
                "test": ""
            },
            "placing": {
                "onBreadboard": false
            }
        }
    ],
    "Blocks": [
        {
            "name": "BMP180",
            "path": "BMP180",
            "category": "input",
            "blockId": "11824",
            "app": {
                "appName": "BMP180 - Barometric Pressure, Temperature, Altitude Sensor",
                "numericName": "BMP180",
                "shortName": "Barometric Pressure Sensor",
                "tags": [
                    "inputs"
                ],
                "indicators": {
                    "verified": "true",
                    "code": "true",
                    "solder": "false"
                },
                "desc": "<p>High precision, low power digital barometer.<br><strong>Returned Values</strong>: Can measure air pressure from 300-110 hPa with 0.02 hPa accuracy.</p>\n<p><strong>Requires</strong>: Soldering 4 pin male header.</p>\n",
                "visible": false
            },
            "coders": [
                "BMP180"
            ],
            "supportedControllers": [
                "ATMega328P",
                "ArduinoGemma",
                "ArduinoLeonardo",
                "ArduinoMega",
                "ArduinoMicro",
                "ArduinoNano",
                "ArduinoProMini3v3",
                "ArduinoProMini5v",
                "ArduinoUno",
                "ESP32DevKitC",
                "NodeMCU",
                "RPI3B"
            ],
            "circuit": {
                "parts": [
                    {
                        "name": "this",
                        "part": "BMP180"
                    }
                ],
                "ports": [
                    {
                        "name": "SDA",
                        "interface": {
                            "isBus": true,
                            "requires":[[0,["SDA","3.3v"]],[1,["SDA","5v"]]]
                        }
                    },
                    {
                        "name": "GND",
                        "interface": {
                            "requires":[[0,["GND"]]]
                        }
                    },
                    {
                        "name": "VCC",
                        "interface": {
                            "requires":[[1,["3.3v"]]]
                        }
                    },
                    {
                        "name": "MemOverLoad",
                        "interface": {
                            "requires":[[0,["SRAMLoad"]]],
                            "requiresLoad": 500
                        }
                    },
                    {
                        "name": "SCL",
                        "interface": {
                            "isBus": true,
                            "requires":[[0,["SCL","3.3v"]],[1,["SCL","5v"]]]
                        }
                    },
                    {
                        "name": "supportedControllers",
                        "interface": {
                            "requires":[[0,["ArduinoMega"]],[1,["ArduinoUno"]],[2,["ArduinoMicro"]],[3,["ArduinoProMini5v"]],[4,["ArduinoProMini3v3"]],[5,["NodeMCU"]],[6,["ArduinoLeonardo"]],[7,["ArduinoNano"]],[8,["ArduinoGemma"]],[9,["RPI3B"]],[10,["ESP32DevKitC"]],[11,["ATMega328P"]]]
                        }
                    }
                ]
            }
        }
    ],
    "Coders": [
        {
            "name": "BMP180",
            "supportedControllers": [
                "ATMega328P",
                "ArduinoGemma",
                "ArduinoLeonardo",
                "ArduinoMega",
                "ArduinoMicro",
                "ArduinoNano",
                "ArduinoProMini3v3",
                "ArduinoProMini5v",
                "ArduinoUno",
                "ESP32DevKitC",
                "NodeMCU",
                "RPI3B"
            ],
            "code": {
                "setup:": "    //Initialize I2C device\n    {{varname}}.begin();\n",
                "snippetCode:": "    // Read Altitude from barometric sensor, note that the sensor is 1m accurate\n    double {{varname}}Alt = {{varname}}.altitude();\n    double {{varname}}Pressure = {{varname}}.getPressure();\n    double {{varname}}TempC = {{varname}}.getTemperatureC();     //See also {{varname}}.getTemperatureF() for Fahrenheit\n    Serial.print(F(\"Altitude: \")); Serial.print({{varname}}Alt,1); Serial.print(F(\" [m]\"));\n    Serial.print(F(\"\\tpressure: \")); Serial.print({{varname}}Pressure,1); Serial.print(F(\" [hPa]\"));\n    Serial.print(F(\"\\tTemperature: \")); Serial.print({{varname}}TempC,1); Serial.println(F(\" [\u00b0C]\"));\n"
            },
            "license": "Beerware",
            "instantiate": {
                "classname": "SFE_BMP180",
                "ports": [],
                "varname": "bmp180"
            },
            "files": [
                "lib/*"
            ]
        }
    ]
}