{
    "Parts": [
        {
            "name": "ServoSM",
            "symbol": {
                "ref": "circuito_Servo - Generic Metal Gear (Micro Size).svg",
                "URL": "https://ucarecdn.com/0102dd7a-bf0b-4762-9a88-0fd916a9fa50/"
            },
            "displayName": "Servo - Generic Metal Gear (Micro Size)",
            "category": [
                "output"
            ],
            "desc": "",
            "bom": [
                {
                    "name": "digikey",
                    "image": "https://ucarecdn.com/947647a0-fccc-48aa-888b-2a9aed858310/",
                    "link": "https://www.digikey.com/products/en?KeyWords=10333&WT.z_header=search_go&v=1568",
                    "price": "10.95",
                    "SKU": "1568-1317-ND"
                }
            ],
            "info": {
                "setup": "",
                "test": ""
            },
            "placing": {
                "onBreadboard": false
            }
        }
    ],
    "Blocks": [
        {
            "name": "ServoSM",
            "path": "ServoSM",
            "category": "output",
            "blockId": "10333",
            "app": {
                "appName": "Servo - Generic Metal Gear (Micro Size)",
                "numericName": "",
                "shortName": "Micro Metal Gear Servo",
                "tags": [
                    "outputs"
                ],
                "indicators": {
                    "verified": "true",
                    "code": "true",
                    "solder": "false"
                },
                "desc": "<p>This is a very simple &amp; small servo, weight only 20g. You can use to rotate an object, or move a robotic arm. It\u2019s able to turn 180 degrees, at a speed of 0.18 sec/60\u00b0.<br><strong>Sample Applications</strong>: <a target=\"_blank\" href=\"http://www.instructables.com/id/Flying-Manatee/\">Flying Manatee</a>.<br><a class=\"more-info\" target=\"_blank\" href=\"https://www.circuito.io/component/servo-motor/\">Learn More</a></p>\n",
                "visible": false
            },
            "coders": [
                "ServoSM"
            ],
            "requires": [
                [
                    0,
                    [
                        "NONE"
                    ]
                ],
                [
                    30,
                    [
                        "Reg5v"
                    ]
                ]
            ],
            "supportedControllers": [
                "ATMega328P",
                "ArduinoGemma",
                "ArduinoLeonardo",
                "ArduinoMega",
                "ArduinoMicro",
                "ArduinoNano",
                "ArduinoProMini3v3",
                "ArduinoProMini5v",
                "ArduinoUno",
                "ESP32DevKitC",
                "NodeMCU",
                "RPI3B"
            ],
            "circuit": {
                "parts": [
                    {
                        "name": "this",
                        "part": "ServoSM"
                    }
                ],
                "ports": [
                    {
                        "name": "0",
                        "interface": {
                            "requires":[[0,["GND"]]]
                        }
                    },
                    {
                        "name": "Sig",
                        "interface": {
                            "requires":[[0,["5v","DigitalOut"]],[1,["3.3v","DigitalOut"]]],
                            "unique": true
                        }
                    },
                    {
                        "name": "Vin",
                        "interface": {
                            "requires":[[0,["5v"]],[1,["6v"]]],
                            "requiresLoad": 500
                        }
                    },
                    {
                        "name": "supportedControllers",
                        "interface": {
                            "requires":[[0,["ArduinoMega"]],[1,["ArduinoUno"]],[2,["ArduinoMicro"]],[3,["ArduinoProMini5v"]],[4,["ArduinoProMini3v3"]],[5,["NodeMCU"]],[6,["ArduinoLeonardo"]],[7,["ArduinoNano"]],[8,["ArduinoGemma"]],[9,["RPI3B"]],[10,["ESP32DevKitC"]],[11,["ATMega328P"]]]
                        }
                    }
                ]
            }
        }
    ],
    "Coders": [
        {
            "name": "ServoSM",
            "supportedControllers": [
                "ATMega328P",
                "ArduinoGemma",
                "ArduinoLeonardo",
                "ArduinoMega",
                "ArduinoMicro",
                "ArduinoNano",
                "ArduinoProMini3v3",
                "ArduinoProMini5v",
                "ArduinoUno",
                "ESP32DevKitC",
                "NodeMCU",
                "RPI3B"
            ],
            "code": {
                "global:": "        const int {{varname}}RestPosition   = 20;  //Starting position\n        const int {{varname}}TargetPosition = 150; //Position when event is detected\n",
                "constructors:": "        {{classname}} {{varname}};\n",
                "setup:": "        {{varname}}.attach({{Sig}});\n        {{varname}}.write({{varname}}RestPosition);\n        delay(100);\n        {{varname}}.detach();\n",
                "snippetCode:": "        // The servo will rotate to target position and back to resting position with an interval of 500 milliseconds (0.5 seconds) \n        {{varname}}.attach({{Sig}});         // 1. attach the servo to correct pin to control it.\n        {{varname}}.write({{varname}}TargetPosition);  // 2. turns servo to target position. Modify target position by modifying the 'ServoTargetPosition' definition above.\n        delay(500);                              // 3. waits 500 milliseconds (0.5 sec). change the value in the brackets (500) for a longer or shorter delay in milliseconds.\n        {{varname}}.write({{varname}}RestPosition);    // 4. turns servo back to rest position. Modify initial position by modifying the 'ServoRestPosition' definition above.\n        delay(500);                              // 5. waits 500 milliseconds (0.5 sec). change the value in the brackets (500) for a longer or shorter delay in milliseconds.\n        {{varname}}.detach();                    // 6. release the servo to conserve power. When detached the servo will NOT hold it's position under stress."
            },
            "license": "ArduinoIDE",
            "instantiate": {
                "classname": "Servo",
                "ports": [
                    "Sig"
                ]
            },
            "includeHeaders": [
                "Servo.h"
            ]
        }
    ]
}